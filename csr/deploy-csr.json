{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "nva_csr": {
            "defaultValue": "hub-csr-001",
            "type": "string"
        },
        "rt_prod_name": {
            "defaultValue": "hub-rt",
            "type": "string"
        },
        "rt_stage_name": {
            "defaultValue": "stage-rt",
            "type": "string"
        },
        "vnet_prod_name": {
            "defaultValue": "prod-vnet",
            "type": "string"
        },
        "vnet_stage_name": {
            "defaultValue": "stage-vnet",
            "type": "string"
        },
        "vm_prod_name": {
            "defaultValue": "prod-linux01",
            "type": "string"
        },
        "vm_stage_name": {
            "defaultValue": "stage-linux01",
            "type": "string"
        },
        "nic0_nva_csr_name": {
            "defaultValue": "hub-csr-001-nic0",
            "type": "string"
        },
        "nic1_nva_csr_name": {
            "defaultValue": "hub-csr-001-nic1",
            "type": "string"
        },
        "nic2_nva_csr_name": {
            "defaultValue": "hub-csr-001-nic2",
            "type": "string"
        },
        "nic3_nva_csr_name": {
            "defaultValue": "hub-csr-001-nic3",
            "type": "string"
        },
        "sa_name": {
            "defaultValue": "pgstoragediag31",
            "type": "string"
        },
        "vnet_hub_name": {
            "defaultValue": "hub-vnet",
            "type": "string"
        },
        "nic1_vm_prod_name": {
            "defaultValue": "prod-linux01-nic1",
            "type": "string"
        },
        "nic1_vm_stage_name": {
            "defaultValue": "stage-linux01-nic1",
            "type": "string"
        },
        "nsg_hub_name": {
            "defaultValue": "hub-nsg",
            "type": "string"
        },
        "pip_prod_name": {
            "defaultValue": "hub-csr-001-prod-pip",
            "type": "string"
        },
        "pip_stage_name": {
            "defaultValue": "hub-csr-001-stage-pip",
            "type": "string"
        },
        "nsg_prod_vm_name": {
            "defaultValue": "prod-linux01-nsg",
            "type": "string"
        },
        "nsg_stage_vm_name": {
            "defaultValue": "stage-linux01-nsg",
            "type": "string"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-04-01",
            "name": "[parameters('nsg_hub_name')]",
            "location": "eastus2",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "73.44.61.79",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1010,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowUdp1",
                        "properties": {
                            "description": "ipsec tunnel connections",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "500",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1020,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowUdp2",
                        "properties": {
                            "description": "allow ipsec nat-t ",
                            "protocol": "Udp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4500",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1030,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "properties": {
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-04-01",
            "name": "[parameters('nsg_prod_vm_name')]",
            "location": "eastus2",
            "properties": {
                "securityRules": [],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "properties": {
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-04-01",
            "name": "[parameters('nsg_stage_vm_name')]",
            "location": "eastus2",
            "properties": {
                "securityRules": [],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "properties": {
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-04-01",
            "name": "[parameters('pip_prod_name')]",
            "location": "eastus2",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-04-01",
            "name": "[parameters('pip_stage_name')]",
            "location": "eastus2",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "name": "[parameters('vnet_hub_name')]",
            "location": "eastus2",
            "dependsOn": [],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.210.128.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "hub-prod-ext",
                        "properties": {
                            "addressPrefix": "10.210.128.0/28",
                            "delegations": []
                        }
                    },
                    {
                        "name": "hub-stage-ext",
                        "properties": {
                            "addressPrefix": "10.210.128.32/28",
                            "delegations": []
                        }
                    },
                    {
                        "name": "hub-stage-int",
                        "properties": {
                            "addressPrefix": "10.210.128.48/28",
                            "delegations": []
                        }
                    },
                    {
                        "name": "hub-prod-int",
                        "properties": {
                            "addressPrefix": "10.210.128.16/28",
                            "serviceEndpoints": [],
                            "delegations": []
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "name": "[parameters('vnet_prod_name')]",
            "location": "eastus2",
            "dependsOn": [],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.210.132.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "prod-subnet1",
                        "properties": {
                            "addressPrefix": "10.210.132.0/25",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('rt_prod_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": []
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-04-01",
            "name": "[parameters('vnet_stage_name')]",
            "location": "eastus2",
            "dependsOn": [],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.210.133.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "stage-subnet1",
                        "properties": {
                            "addressPrefix": "10.210.133.0/25",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('rt_stage_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": []
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2019-04-01",
            "name": "[parameters('rt_prod_name')]",
            "location": "eastus2",
            "properties": {
                "disableBgpRoutePropagation": true,
                "routes": [
                    {
                        "name": "on-prem-route",
                        "properties": {
                            "addressPrefix": "10.0.0.12/30",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.210.128.20"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2019-04-01",
            "name": "[parameters('rt_stage_name')]",
            "location": "eastus2",
            "properties": {
                "disableBgpRoutePropagation": true,
                "routes": [
                    {
                        "name": "on-prem",
                        "properties": {
                            "addressPrefix": "10.0.0.12/30",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.210.128.52"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('vnet_hub_name'), '/hub-prod-ext')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_hub_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.210.128.0/28",
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('vnet_hub_name'), '/hub-prod-int')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_hub_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.210.128.16/28",
                "serviceEndpoints": [],
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('vnet_hub_name'), '/hub-stage-ext')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_hub_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.210.128.32/28",
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('vnet_hub_name'), '/hub-stage-int')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_hub_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.210.128.48/28",
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('vnet_prod_name'), '/prod-subnet1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_prod_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('rt_prod_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.210.132.0/25",
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('rt_prod_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('vnet_stage_name'), '/stage-subnet1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_stage_name'))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('rt_stage_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.210.133.0/25",
                "routeTable": {
                    "id": "[resourceId('Microsoft.Network/routeTables', parameters('rt_stage_name'))]"
                },
                "serviceEndpoints": [],
                "delegations": []
            }
        },

        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('nsg_hub_name'), '/AllowUdp1')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsg_hub_name'))]"
            ],
            "properties": {
                "description": "ipsec tunnel connections",
                "protocol": "Udp",
                "sourcePortRange": "*",
                "destinationPortRange": "500",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1020,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('nsg_hub_name'), '/AllowUdp2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsg_hub_name'))]"
            ],
            "properties": {
                "description": "allow ipsec nat-t ",
                "protocol": "Udp",
                "sourcePortRange": "*",
                "destinationPortRange": "4500",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1030,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('nsg_hub_name'), '/SSH')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsg_hub_name'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "22",
                "sourceAddressPrefix": "73.44.61.79",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 1010,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('rt_stage_name'), '/on-prem')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('rt_stage_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.12/30",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.210.128.52"
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('rt_prod_name'), '/on-prem-route')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('rt_prod_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.12/30",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "10.210.128.20"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[parameters('sa_name')]",
            "location": "eastus2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": false,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[parameters('vm_prod_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic1_vm_prod_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('sa_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1ls"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('vm_prod_name'), '_disk1_3ecb9f81c0e94f19aeb6cdaf7f5eb718')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('vm_prod_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic1_vm_prod_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('sa_name'), '.blob.core.windows.net')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[parameters('vm_stage_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic1_vm_stage_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('sa_name'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_B1ls"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('vm_stage_name'), '_OsDisk_1_ee0d8f877e7149c89a802ea203049fb7')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('vm_stage_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic1_vm_stage_name'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('sa_name'), '.blob.core.windows.net')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-04-01",
            "name": "[parameters('nic1_vm_prod_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_prod_name'), 'prod-subnet1')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsg_prod_vm_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_prod_name'), 'prod-subnet1')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsg_prod_vm_name'))]"
                },
                "primary": true,
                "tapConfigurations": []
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-04-01",
            "name": "[parameters('nic1_vm_stage_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_stage_name'), 'stage-subnet1')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsg_stage_vm_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_stage_name'), 'stage-subnet1')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsg_stage_vm_name'))]"
                },
                "primary": true,
                "tapConfigurations": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('vnet_hub_name'), '/hub-to-prod')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_hub_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_prod_name'))]"
            ],
            "properties": {
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_prod_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.210.132.0/24"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('vnet_hub_name'), '/hub-to-stage')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_hub_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_stage_name'))]"
            ],
            "properties": {
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_stage_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.210.133.0/24"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('vnet_prod_name'), '/prod-to-hub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_prod_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_hub_name'))]"
            ],
            "properties": {
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_hub_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.210.128.0/24"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('vnet_stage_name'), '/stage-to-hub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_stage_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_hub_name'))]"
            ],
            "properties": {
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_hub_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.210.128.0/24"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-04-01",
            "name": "[parameters('nic0_nva_csr_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('pip_prod_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_hub_name'), 'hub-prod-ext')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsg_hub_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('pip_prod_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_hub_name'), 'hub-prod-ext')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsg_hub_name'))]"
                },
                "primary": true,
                "tapConfigurations": []
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-04-01",
            "name": "[parameters('nic1_nva_csr_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_hub_name'), 'hub-prod-int')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_hub_name'), 'hub-prod-int')]"
                            },
                            "primary": false,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "wjs5mq2xyfwuncg2alghyvymhf.cx.internal.cloudapp.net"
                },
                "macAddress": "00-0D-3A-7A-8D-54",
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": true,
                "primary": false,
                "tapConfigurations": []
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-04-01",
            "name": "[parameters('nic2_nva_csr_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('pip_stage_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_hub_name'), 'hub-stage-ext')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsg_hub_name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('pip_stage_name'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_hub_name'), 'hub-stage-ext')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": true,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsg_hub_name'))]"
                },
                "primary": false,
                "tapConfigurations": []
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-04-01",
            "name": "[parameters('nic3_nva_csr_name')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_hub_name'), 'hub-stage-int')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_hub_name'), 'hub-stage-int')]"
                            },
                            "primary": false,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": [],
                    "internalDomainNameSuffix": "wjs5mq2xyfwuncg2alghyvymhf.cx.internal.cloudapp.net"
                },
                "macAddress": "00-0D-3A-7A-89-44",
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": true,
                "primary": false,
                "tapConfigurations": []
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[parameters('nva_csr')]",
            "location": "eastus2",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic0_nva_csr_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic1_nva_csr_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic2_nva_csr_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic3_nva_csr_name'))]",
                "[resourceId('Microsoft.Storage/StorageAccounts', parameters('sa_name'))]"
            ],
            "plan": {
                "name": "16_10-byol",
                "product": "cisco-csr-1000v",
                "publisher": "cisco"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_DS3_v2"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "cisco",
                        "offer": "cisco-csr-1000v",
                        "sku": "16_10-byol",
                        "version": "16.10.120190108"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('nva_csr'), '_OsDisk_1_d5205132f9b243268f54740212bed80d')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "diskSizeGB": 8
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[parameters('nva_csr')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic0_nva_csr_name'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic1_nva_csr_name'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic2_nva_csr_name'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('nic3_nva_csr_name'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('sa_name'), '.blob.core.windows.net/')]"
                    }
                }
            }
        }
    ]
}